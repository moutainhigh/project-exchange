<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oscache="http://www.springmodules.org/schema/oscache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" default-lazy-init="true">

	<context:component-scan base-package="com.throne212" />
	<!-- 
	<bean id="init" class="com.throne212.jianzhi8.listener.CommonListener" lazy-init="false"></bean>
 	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialSize" value="10" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="30" />
        <property name="minIdle" value="10" />
        <property name="logAbandoned" value="true" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="1000" />
        <property name="maxWait" value="5000" />
	</bean>
	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- a PlatformTransactionManager is still required -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- (this dependency is defined somewhere else) -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	
    <!-- 配置freemarkerManager -->
	<bean id="freemarkerManager" class="org.apache.struts2.views.freemarker.FreemarkerManager" />
	
	<!-- 配置定时器，定时检查更新任务的状态 -->
	<bean name="updateTaskStatus" class="org.springframework.scheduling.quartz.JobDetailBean">
  		<property name="jobClass" value="com.throne212.tui5.common.TimerBean" />
		<property name="jobDataAsMap">
 			<map>
   				<entry key="timeout" value="5" />
   				<entry key="taskBiz" value-ref="taskBiz"></entry>
 			</map>
		</property>
	</bean>
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean" lazy-init="false">
	    <property name="jobDetail" ref="updateTaskStatus" />
	    <property name="startDelay" value="5000" /><!-- 启动5秒钟以后开始 -->
	    <property name="repeatInterval" value="60000" /> <!-- 间隔1分钟 -->
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
	        <list>
	            <ref bean="simpleTrigger" />
	        </list>
	    </property>
	</bean>

</beans>