<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oscache="http://www.springmodules.org/schema/oscache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" default-lazy-init="true">

	<context:component-scan base-package="com.throne212" />
	
	<bean id="init" class="com.throne212.jianzhi8.listener.CommonListener" lazy-init="false"></bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>10</value>
		</property>
		<property name="minPoolSize">
			<value>10</value>
		</property>
		<property name="maxPoolSize">
			<value>300</value>
		</property>
		<property name="acquireIncrement">
			<value>1</value>
		</property>
		<property name="maxIdleTime">
			<value>20</value>
		</property>
		<property name="maxStatements">
			<value>0</value>
		</property>
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- a PlatformTransactionManager is still required -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- (this dependency is defined somewhere else) -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	
    <!-- 配置freemarkerManager -->
	<bean id="freemarkerManager" class="org.apache.struts2.views.freemarker.FreemarkerManager" />
	
	<!-- 定时器生成HTML -->
	<bean name="htmlBuildJobDetailBean" class="org.springframework.scheduling.quartz.JobDetailBean">
  		<property name="jobClass" value="com.throne212.jianzhi8.service.HtmlBuildTimerBean" />
		<property name="jobDataAsMap">
 			<map>
   				<entry key="timeout" value="10" />
   				<entry key="htmlBuildService" value-ref="htmlBuildService"></entry>
 			</map>
		</property>
	</bean>
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean" lazy-init="false">
	    <!-- see the example of method invoking job above -->
	    <property name="jobDetail" ref="htmlBuildJobDetailBean" />
	    <!-- 1 mill seconds -->
	    <property name="startDelay" value="1" />
	    <!-- repeat every 600 seconds, 10 mins -->
	    <property name="repeatInterval" value="600000" />
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
	        <list>
	            <ref bean="simpleTrigger" />
	        </list>
	    </property>
	</bean>

</beans>